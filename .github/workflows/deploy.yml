name: Rust

on:
  push:
    tags: 
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  NAME: vocabulist
  BINARY_NAME: vocabulist_rs

jobs:
  deploy:
    name: Deploy from ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
      
    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Set Target MacOS
      if: runner.os == 'macos-latest'
      run: echo "::set-env name=TARGET::x86_64-apple-darwin"
      
    - name: Set Target Linux
      if: runner.os == 'ubuntu-latest'
      run: echo "::set-env name=TARGET::x86_64-unknown-linux-gnu"
    
    - name: Build Release
      run: cargo build --verbose --release --workspace --target $TARGET
      
    - name: Make Staging Directory MacOS
      if: runner.os == 'macos-latest'
      run: echo "::set-env name=STAGE_PATH::$(mktemp -d -t tmp)"
    
    - name: Make Staging Directory Linux
      if: runner.os == 'ubuntu-latest'
      run: echo "::set-env name=STAGE_PATH::$(mktemp -d)"
      
    - name: Set Tag
      run: echo "::set-env name=TAG::${{ github.ref }}"
      
    - name: Package Release Linux 
      run: |
        src="$(pwd)"
        
        mkdir $STAGE_PATH/$NAME
        
        cp target/$TARGET/release/$BINARY_NAME $STAGE_PATH/$NAME
        cp jmdict.db $STAGE_PATH/$NAME
        cp ACKNOWLEDGEMENTS.md $STAGE_PATH/$NAME
        cp LICENSE.md $STAGE_PATH/$NAME
        
        cd $STAGE_PATH
        
        tar czf "$src/$NAME-$TAG-$TARGET.tar.gz" $NAME
    
    - name: Create a Release
      uses: actions/create-release@v1
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Release ${{ github.ref }}
